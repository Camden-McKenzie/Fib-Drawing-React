{"ast":null,"code":"var _jsxFileName = \"/Users/camden/git/fid-draw/fib-drawing/src/Canvas.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from 'react';\nimport Point from './point';\nimport DirectionGenerator from './DirectionGenerator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst INITRAD = Math.PI / 2;\nconst ANGLE = Math.PI / Math.E / 2;\nconst SPEED = 10000;\nconst LEN = 14;\nconst ZOOM = 3;\n\nconst Canvas = props => {\n  _s();\n\n  const canvasRef = useRef(null);\n  let current = 1;\n  let prev = 1;\n  let gen = new DirectionGenerator(INITRAD);\n\n  const draw = (ctx, pos) => {\n    for (let j = 0; j < SPEED; j++) {\n      gen.changeRad(gen.step += ANGLE);\n      current = 1;\n      prev = 1;\n\n      for (let i = 0; i < LEN; i++) {\n        const temp = current;\n        current = current + prev;\n        prev = temp;\n        ctx.beginPath();\n        ctx.moveTo(pos.x, pos.y);\n        pos.turn(gen.next(), current);\n        ctx.lineTo(pos.x, pos.y);\n        ctx.stroke();\n      }\n    }\n  };\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n    let pos = new Point(canvas.width / 2, canvas.height / 2, ZOOM);\n    let frameCount = 0;\n    let animationFrameId; //Our draw came here\n\n    const render = () => {\n      frameCount++;\n      draw(context, pos);\n      animationFrameId = window.requestAnimationFrame(render);\n    };\n\n    render();\n    return () => {\n      window.cancelAnimationFrame(animationFrameId);\n    };\n  }, [draw]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Canvas, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n\n_c = Canvas;\nexport default Canvas;\n\nvar _c;\n\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"sources":["/Users/camden/git/fid-draw/fib-drawing/src/Canvas.js"],"names":["React","useRef","useEffect","Point","DirectionGenerator","INITRAD","Math","PI","ANGLE","E","SPEED","LEN","ZOOM","Canvas","props","canvasRef","current","prev","gen","draw","ctx","pos","j","changeRad","step","i","temp","beginPath","moveTo","x","y","turn","next","lineTo","stroke","canvas","context","getContext","width","window","innerWidth","height","innerHeight","frameCount","animationFrameId","render","requestAnimationFrame","cancelAnimationFrame"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect } from 'react'\nimport Point from './point'\nimport DirectionGenerator from './DirectionGenerator'\n\nconst INITRAD = Math.PI / 2;\nconst ANGLE = Math.PI / Math.E / 2;\nconst SPEED = 10000;\nconst LEN = 14\nconst ZOOM = 3;\n\nconst Canvas = props => {\n\n  const canvasRef = useRef(null)\n\n  let current = 1;\n  let prev = 1;\n\n  let gen = new DirectionGenerator(INITRAD)\n\n  const draw = (ctx, pos) => {\n    for (let j = 0; j < SPEED; j++) {\n      gen.changeRad(gen.step += ANGLE)\n      current = 1\n      prev = 1\n\n      for (let i = 0; i < LEN; i++) {\n\n        const temp = current\n        current = current + prev\n        prev = temp\n        ctx.beginPath()\n        ctx.moveTo(pos.x, pos.y)\n        pos.turn(gen.next(), current)\n        ctx.lineTo(pos.x, pos.y)\n        ctx.stroke()\n      }\n    }\n  }\n\n  useEffect(() => {\n\n    const canvas = canvasRef.current\n    const context = canvas.getContext('2d')\n\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n\n    let pos = new Point(canvas.width / 2, canvas.height / 2, ZOOM)\n\n\n    let frameCount = 0\n    let animationFrameId\n\n    //Our draw came here\n    const render = () => {\n      frameCount++\n\n\n\n      draw(context, pos)\n      animationFrameId = window.requestAnimationFrame(render)\n    }\n    render()\n\n    return () => {\n      window.cancelAnimationFrame(animationFrameId)\n    }\n  }, [draw])\n\n  return <canvas ref={canvasRef} {...props} />\n}\n\n\nexport default Canvas"]},"metadata":{},"sourceType":"module"}